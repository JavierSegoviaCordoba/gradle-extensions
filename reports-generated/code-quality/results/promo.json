{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'configurationCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 165,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 163,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun configurationCache(): String = \"--configuration-cache\"\n\n    public fun GradleRunner.andWithConfigurationCache() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a561b6630cdb0fb1c29b7f1e04744d133dcab3ccc1681dcdf3fc049488862deb"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'noConfigurationCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 171,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 169,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun noConfigurationCache(): String = \"--no-configuration-cache\"\n\n    public fun GradleRunner.andWithNoConfigurationCache() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "12fe12ff960fc6889cf3e9d02b9c44ff431d40424cc14cd7d7c7ef8a3f34593d"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'systemProperty' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 129,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 127,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun systemProperty(value: String): String = \"-D$value\"\n\n    public fun GradleRunner.andWithSystemProperty(value: String) {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "8480b2d0f22a17411634c498bd6e97d7e47bf06253f9045c872d5e45ccfc1459"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'buildCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 153,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 151,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun buildCache(): String = \"--build-cache\"\n\n    public fun GradleRunner.andWithBuildCache() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "ce95de5dadcd4a9179bf67da658f10d950ff54139b0283f9f1c48b7a261520ac"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'stacktrace' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 141,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 139,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun stacktrace(): String = \"--stacktrace\"\n\n    public fun GradleRunner.andWithStacktrace() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "375ff255a19838bdf3694e04569005fe7b2fd5e47f58b7195199f0315e946df6"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'projectProperty' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 123,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 121,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun projectProperty(value: String): String = \"-P$value\"\n\n    public fun GradleRunner.andWithProjectProperty(value: String) {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "7b91788565d850556a63fbca5d82383f288cdfc7718105c0c918bf7e35a26ee6"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'info' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 135,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 133,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun info(): String = \"--info\"\n\n    public fun GradleRunner.andWithInfo() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "e7e7d6e9b0e79936c98a19a65001062fee385403608034a3776c5d47556239cb"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'cleanBuildDirectory' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 117,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 115,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun GradleRunner.cleanBuildDirectory() {\n        for (file in projectDir.walkTopDown()) {\n            if (file.isDirectory && file.name == \"build\") file.deleteRecursively()"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6a7c192ffe579219abd9b0514d781a2a7f4145474177bb5b7c05ae6e02a4eac4"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'andWithConfigurationCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 167,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 165,
        "length": 6,
        "offset": 75,
        "surroundingCode": "    public fun configurationCache(): String = \"--configuration-cache\"\n\n    public fun GradleRunner.andWithConfigurationCache() {\n        withArguments(arguments + configurationCache())\n    }"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a13c438050079187ce34f9d2f206345bb67e7d0475708e8377cd6aa31848fea5"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'noBuildCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 159,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 157,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun noBuildCache(): String = \"--no-build-cache\"\n\n    public fun GradleRunner.andWithNoBuildCache() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "b5323ef5c5e313c1f57814371cf37398852c2b11956415a2c47c5fa1ff61fb9b"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'andWithNoBuildCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 161,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 159,
        "length": 6,
        "offset": 64,
        "surroundingCode": "    public fun noBuildCache(): String = \"--no-build-cache\"\n\n    public fun GradleRunner.andWithNoBuildCache() {\n        withArguments(arguments + noBuildCache())\n    }"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "ce3d0a0d6fc4007ff35e5d7cfe6f14587a3946f68e84cf16339f47fff53759a8"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'andWithBuildCache' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 155,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 153,
        "length": 6,
        "offset": 59,
        "surroundingCode": "    public fun buildCache(): String = \"--build-cache\"\n\n    public fun GradleRunner.andWithBuildCache() {\n        withArguments(arguments + buildCache())\n    }"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "bcbaf1cc4853257d8ad3d36a7b98ba75bcc72d699997218eb9412d1698e7e994"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'scan' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 147,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 145,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun scan(): String = \"--scan\"\n\n    public fun GradleRunner.andWithScan() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "453a9af331783c58900421816fa8d2cb2248a7dd5fe51ec3493617041f237186"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Function 'configurationCacheProblemsWarn' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "gradle-test-extensions-subprojects/gradle-testkit-test-extensions/main/kotlin/com/javiersc/gradle/testkit/test/extensions/GradleTest.kt",
      "language": "kotlin",
      "line": 177,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 175,
        "length": 6,
        "offset": 11,
        "surroundingCode": "    }\n\n    public fun configurationCacheProblemsWarn(): String = \"--configuration-cache-problems=warn\"\n\n    public fun GradleRunner.andWithConfigurationCacheProblemsWarn() {"
      }
    }
  ],
  "attributes": {
    "module": "gradle-extensions-project.gradle-test-extensions-subprojects.gradle-testkit-test-extensions.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "852c18479e117bad6a67434bb4e672f85641ec877424da8330eae4afa613ceb9"
}]}